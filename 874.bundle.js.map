{"version":3,"file":"874.bundle.js","mappings":"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","sources":["webpack://test-cat/./src/modules/CatsTask/components/CatCheckbox/CatCheckbox.style.ts","webpack://test-cat/./src/modules/CatsTask/components/CatCheckbox/CatCheckbox.tsx","webpack://test-cat/./src/modules/CatsTask/components/CatButton/CatButton.style.ts","webpack://test-cat/./src/modules/CatsTask/components/CatButton/CatButton.tsx","webpack://test-cat/./src/modules/CatsTask/components/CatImage/CatImage.style.ts","webpack://test-cat/./src/modules/CatsTask/components/CatImage/CatImage.tsx","webpack://test-cat/./src/modules/CatsTask/CatsTask.styles.ts","webpack://test-cat/./src/modules/CatsTask/CatsTask.module.tsx","webpack://test-cat/./src/modules/CatsTask/CatsTask.agent.ts","webpack://test-cat/./src/pages/MainPage/MainPage.style.ts","webpack://test-cat/./src/pages/MainPage/MainPage.tsx"],"sourcesContent":["import styled from 'styled-components';\nexport const CheckboxWrapper = styled.section({\n    width: 'auto',\n    height: 'auto',\n    fontFamily: 'var(--font-ptsans)',\n});\nexport const StyledLabel = styled.label((props) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '5px',\n    opacity: props.disabled ? 0.5 : 1,\n    '&:hover': {\n        cursor: props.disabled ? 'default' : 'pointer',\n    },\n}));\nexport const StyledCheckbox = styled.input.attrs({ type: 'checkbox' })({\n    appearance: 'none',\n    width: '16px',\n    height: '16px',\n    outline: '2px solid var(--soft-indigo-100)',\n    borderRadius: '4px',\n    position: 'relative',\n    transition: 'all 0.1s ease',\n    cursor: 'pointer',\n    '&:checked': {\n        backgroundColor: 'var(--soft-indigo-100)',\n        borderColor: 'var(--soft-indigo-100)',\n    },\n    '&:checked::after': {\n        content: '\"\"',\n        position: 'absolute',\n        top: '2px',\n        left: '5px',\n        width: '4px',\n        height: '8px',\n        border: 'solid white',\n        borderWidth: '0 2px 2px 0',\n        transform: 'rotate(45deg)',\n    },\n});\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { memo } from 'react';\nimport { CheckboxWrapper, StyledCheckbox, StyledLabel, } from './CatCheckbox.style';\nfunction CatCheckboxProto({ name, label, checked, onChange, disabled }) {\n    return (_jsx(CheckboxWrapper, { children: _jsxs(StyledLabel, { disabled: disabled, children: [_jsx(StyledCheckbox, { type: \"checkbox\", name: name, checked: checked, onChange: onChange, disabled: disabled }), label] }) }));\n}\nexport const CatCheckbox = memo(CatCheckboxProto);\n","import styled from 'styled-components';\nexport const StyledButton = styled.button({\n    width: 'auto',\n    height: 'auto',\n    padding: '5px 0',\n    fontFamily: 'var(--font-ptsans)',\n    color: 'white',\n    outline: 'none',\n    border: 'none',\n    background: 'var(--soft-indigo-70)',\n    borderRadius: '5px',\n    letterSpacing: '2px',\n    transition: 'all 0.1s ease',\n    '&:hover': {\n        background: 'var(--soft-indigo-100)',\n    },\n    '&:active': {\n        background: 'var(--soft-indigo-90)',\n        transform: 'scale(0.98)',\n    },\n});\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { memo } from 'react';\nimport { StyledButton } from './CatButton.style';\nfunction CatButtonProto({ name, label, disabled, onClick }) {\n    return (_jsx(StyledButton, { type: \"button\", name: name, disabled: disabled, onClick: onClick, children: _jsx(\"b\", { children: label }) }));\n}\nexport const CatButton = memo(CatButtonProto);\n","import styled from 'styled-components';\nexport const StyledImg = styled.img({\n    maxWidth: '400px',\n    borderRadius: '5px',\n});\nexport const StyledNoData = styled.div({\n    margin: '100px 0',\n    fontFamily: 'var(--font-ptsans)',\n    fontSize: '22px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    gap: '10px'\n});\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { memo } from 'react';\nimport { CircleLoader } from 'shared/ui';\nimport { StyledNoData, StyledImg } from './CatImage.style';\nfunction CatImageProto({ url, isLoading }) {\n    if (!url && !isLoading)\n        return (_jsxs(StyledNoData, { children: [_jsx(\"div\", { children: \"No data\" }), _jsx(\"div\", { children: \"(\\uFF61\\u256F\\uFE35\\u2570\\uFF61)\" })] }));\n    return isLoading ? _jsx(CircleLoader, {}) : _jsx(StyledImg, { src: url, alt: \"cat-image\" });\n}\nexport const CatImage = memo(CatImageProto);\n","import styled from 'styled-components';\nexport const StyledForm = styled.form({\n    boxSizing: 'border-box',\n    width: '400px',\n    padding: '20px',\n    marginTop: '50px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n});\nexport const ControlsWrapper = styled.div({\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px',\n    outline: '1px solid rgba(0, 0, 0, 0.1)',\n    borderRadius: '5px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n});\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { memo, useEffect, useState } from 'react';\nimport { getCatsAgent } from './CatsTask.agent';\nimport { CatCheckbox, CatButton, CatImage } from './components';\nimport { ControlsWrapper, StyledForm } from './CatsTask.styles';\nfunction CatsTaskProto() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [cats, setCats] = useState([]);\n    const [enabled, setEnabled] = useState(true);\n    const [refrash, setRefrash] = useState(false);\n    // обработка запроса в модуле вместо стора, т.к. нет необходимости\n    // разделять бизнесс-логику и UI в рамках маленькой формы без использования state-менеджера.\n    async function getCats() {\n        setIsLoading(true);\n        try {\n            const catsData = await getCatsAgent(1);\n            return setCats(catsData);\n        }\n        catch (error) {\n            if (error instanceof Error)\n                throw error;\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }\n    useEffect(() => {\n        if (refrash) {\n            getCats();\n            const interval = setInterval(() => {\n                getCats();\n            }, 5000);\n            return () => clearInterval(interval);\n        }\n    }, [refrash]);\n    const handleChangeEnable = (event) => {\n        setEnabled(event.target.checked);\n    };\n    const handleChangeRefrash = (event) => {\n        setRefrash(event.target.checked);\n    };\n    // Модуль без Context.Provider т.к. в случае расширения формы это приведет к рефактору логики\n    return (_jsxs(StyledForm, { children: [_jsxs(ControlsWrapper, { children: [_jsx(CatCheckbox, { name: 'enabled', label: 'Enabled', checked: enabled, onChange: handleChangeEnable, disabled: refrash }), _jsx(CatCheckbox, { name: 'refrash', label: 'Auto-refrash every 5 second', checked: refrash, onChange: handleChangeRefrash }), _jsx(CatButton, { name: 'getCat', label: 'Get Cat', disabled: isLoading || !enabled || refrash, onClick: getCats })] }), _jsx(CatImage, { url: cats[0]?.url, isLoading: isLoading })] }));\n}\nexport const CatsTask = memo(CatsTaskProto);\n","const KEY_API = 'live_dlzlsWYT2L0XcY4qEkZR0Tw9YN11BwSQhxKegYsMPRIx9RHkZXFNt1erYgbyeUda';\nconst BASE_URL = 'https://api.thecatapi.com';\n// использован стандартный fetch с параметром limit, без сервиса и адпатера\nexport async function getCatsAgent(limit) {\n    const res = await fetch(`${BASE_URL}/v1/images/search?limit=${limit}`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${KEY_API}`,\n            'Content-Type': 'application/json',\n        },\n    });\n    if (!res.ok) {\n        throw new Error(`Error fetch cats: ${res.statusText}`);\n    }\n    const data = await res.json();\n    return data;\n}\n","import styled from 'styled-components';\nexport const MainPageWrapper = styled.div({\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n});\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { memo } from 'react';\nimport { CatsTask } from 'modules';\nimport { MainPageWrapper } from './MainPage.style';\nfunction MainPageProto() {\n    return (_jsx(MainPageWrapper, { children: _jsx(CatsTask, {}) }));\n}\nconst MainPage = memo(MainPageProto);\nexport default MainPage;\n"],"names":["CheckboxWrapper","section","width","height","fontFamily","StyledLabel","label","props","display","flexDirection","alignItems","gap","opacity","disabled","cursor","StyledCheckbox","input","attrs","type","appearance","outline","borderRadius","position","transition","backgroundColor","borderColor","content","top","left","border","borderWidth","transform","CatCheckbox","memo","name","checked","onChange","children","StyledButton","button","padding","color","background","letterSpacing","CatButton","onClick","StyledImg","img","maxWidth","StyledNoData","div","margin","fontSize","justifyContent","textAlign","CatImage","url","isLoading","src","alt","StyledForm","form","boxSizing","marginTop","ControlsWrapper","boxShadow","CatsTask","setIsLoading","useState","cats","setCats","enabled","setEnabled","refrash","setRefrash","async","getCats","catsData","res","fetch","method","headers","Authorization","ok","Error","statusText","json","getCatsAgent","error","useEffect","interval","setInterval","clearInterval","event","target","MainPageWrapper"],"sourceRoot":""}